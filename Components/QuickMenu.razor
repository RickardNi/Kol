@using Microsoft.JSInterop
@inject IJSRuntime JS

<div class="quick-menu-container @(IsOpen ? "open" : "")">
    <div class="popup-grid">
        <div class="popup-quadrant top-left">
            <div class="reset-control">
                <button class="reset-btn" @onclick="OnResetClick" aria-label="Reset health">
                    <svg xmlns="http://www.w3.org/2000/svg" width="120" height="120" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-rotate-ccw-icon lucide-rotate-ccw">
                        <path d="M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"/>
                        <path d="M3 3v5h5"/>
                    </svg>
                </button>
                <span class="reset-label">Reset</span>
            </div>
        </div>
        <div class="popup-quadrant top-right">
            <div class="history-control">
                <button class="history-btn" @onclick="OnHistoryClick" aria-label="View history">
                    <svg xmlns="http://www.w3.org/2000/svg" width="120" height="120" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-history-icon lucide-history">
                        <path d="M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"/>
                        <path d="M3 3v5h5"/>
                        <path d="M12 7v5l4 2"/>
                    </svg>
                </button>
                <span class="history-label">History</span>
            </div>
        </div>
        <div class="popup-quadrant bottom-left">
            <div class="dice-control">
                <button class="dice-btn" @onclick="OnRollClick" aria-label="Roll dice">
                    <svg xmlns="http://www.w3.org/2000/svg" width="120" height="120" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-dices-icon lucide-dices">
                        <rect width="12" height="12" x="2" y="10" rx="2" ry="2"/>
                        <path d="m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6"/>
                        <path d="M6 18h.01"/>
                        <path d="M10 14h.01"/>
                        <path d="M15 6h.01"/>
                        <path d="M18 9h.01"/>
                    </svg>
                </button>
                <span class="dice-label">Roll</span>
            </div>
        </div>
        <div class="popup-quadrant bottom-right">
            <div class="settings-control">
                <button class="settings-control-btn" @onclick="OnSettingsClick" aria-label="Open settings">
                    <svg xmlns="http://www.w3.org/2000/svg" width="120" height="120" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-settings-icon lucide-settings">
                        <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z"/>
                        <circle cx="12" cy="12" r="3"/>
                    </svg>
                </button>
                <span class="settings-control-label">Settings</span>
            </div>
        </div>
    </div>
</div>

<div class="toggle-btn-container">
    <button class="toggle-btn @(IsOpen ? "close" : "quick-menu")" 
            @onclick="OnToggleClick" 
            @onpointerdown="() => OnToggleButtonPointerDown()"
            @onpointerup="() => OnToggleButtonPointerUp()"
            @onpointerleave="() => OnToggleButtonPointerLeave()"
            aria-label="@(IsOpen ? "Close quick menu" : "Open quick menu")">
        <svg class="quick-menu-icon lucide lucide-bolt-icon lucide-bolt" xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/>
            <circle cx="12" cy="12" r="4"/>
        </svg>
        <svg class="close-icon lucide lucide-circle-x-icon lucide-circle-x" xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"/>
            <path d="m15 9-6 6"/>
            <path d="m9 9 6 6"/>
        </svg>
    </button>
</div>

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }
    [Parameter] public EventCallback OnResetClick { get; set; }
    [Parameter] public EventCallback OnHistoryClick { get; set; }
    [Parameter] public EventCallback OnRollClick { get; set; }
    [Parameter] public EventCallback OnSettingsClick { get; set; }
    [Parameter] public EventCallback OnAdvancedLongPress { get; set; }

    private async Task OnToggleClick()
    {
        await IsOpenChanged.InvokeAsync(!IsOpen);
    }

    private async Task OnToggleButtonPointerDown()
    {
        // Start long press timer for advanced menu
        await JS.InvokeVoidAsync("startLongPress", DotNetObjectReference.Create(this), "advanced");
    }

    private async Task OnToggleButtonPointerUp()
    {
        // Cancel long press timer
        await JS.InvokeVoidAsync("cancelLongPress");
    }

    private async Task OnToggleButtonPointerLeave()
    {
        // Cancel long press timer
        await JS.InvokeVoidAsync("cancelLongPress");
    }

    [JSInvokable]
    public void OnLongPressAdvanced()
    {
        // Open advanced menu on long press of toggle button
        OnAdvancedLongPress.InvokeAsync();
    }
} 