@using Microsoft.AspNetCore.Components

<div class="settings-overlay @(IsOpen ? "open" : "")">
    <div class="settings-container">
        <div class="settings-header">
            <button class="settings-close-btn" @onclick="CloseSettings" aria-label="Close settings">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-x-icon lucide-circle-x">
                    <circle cx="12" cy="12" r="10"/>
                    <path d="m15 9-6 6"/>
                    <path d="m9 9 6 6"/>
                </svg>
            </button>
        </div>
        
        <div class="settings-content">
            <div class="settings-section">
                <h3>Appearance</h3>
                <div class="setting-item">
                    <label>Light Mode</label>
                    <div class="setting-control">
                        <span class="placeholder">Off</span>
                    </div>
                </div>
                <div class="setting-item clickable" @onclick="CycleFont">
                    <label>Font</label>
                    <div class="setting-control">
                        <span class="placeholder">@CurrentFontName</span>
                    </div>
                </div>
                <div class="setting-item">
                    <label>Colors</label>
                    <div class="setting-control">
                        <span class="placeholder">Default</span>
                    </div>
                </div>
            </div>
            
            <div class="settings-section">
                <h3>About</h3>
                <div class="setting-item">
                    <label>GitHub</label>
                    <div class="setting-control">
                        <a href="https://github.com/RickardNi/Kol" target="_blank" class="github-link">https://github.com/RickardNi/Kol</a>
                    </div>
                </div>
                <div class="setting-item">
                    <label>Build</label>
                    <div class="setting-control">
                        <span class="placeholder">@BuildNumber</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }
    [Parameter] public string BuildNumber { get; set; } = "dev";
    [Parameter] public EventCallback<string> FontChanged { get; set; }

    private string currentFont = "Oxanium";
    private readonly string[] availableFonts = { "Oxanium", "Rationale", "Anta" };

    public string CurrentFontName => currentFont == "Oxanium" ? "Oxanium (default)" : currentFont;

    private async Task CloseSettings()
    {
        IsOpen = false;
        await IsOpenChanged.InvokeAsync(false);
    }

    private async Task CycleFont()
    {
        var currentIndex = Array.IndexOf(availableFonts, currentFont);
        var nextIndex = (currentIndex + 1) % availableFonts.Length;
        currentFont = availableFonts[nextIndex];
        
        await FontChanged.InvokeAsync(currentFont);
    }
} 